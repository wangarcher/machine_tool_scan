<launch><!--ros controller-->>

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/> <!-- Inert - see gazebo_ros_pkgs issue #491 -->
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find machine_tool_gazebo)/world/example.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>
  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="TRUE"/>
  </node> -->

  <!-- Combine joint values -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/> -->

  <arg name="model" default="$(find xacro)/xacro  '$(find machine_tool_description)/urdf/xacro/main_pose.xacro'" />
  <param name="robot_description" command="$(arg model)" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  args="-urdf -model machine_tool -param robot_description" />

  <include file="$(find machine_tool_control)/launch/machine_tool_control_pose.launch"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find machine_tool_description)/rviz/all.rviz" required="true" />

</launch>
